{"ast":null,"code":"var _jsxFileName = \"/Users/jaykhemchandani/Desktop/CardCounterChecker/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport BlackjackTable from './components/BlackjackTable';\nimport CounterDetection from './components/CounterDetection';\nimport BettingControls from './components/BettingControls';\n\n// Set the base URL for API calls (helpful for debugging)\n// Use this instead of relying on the proxy in package.json\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000';\n\n// Helper function to make API calls with proper error handling\nconst apiCall = async (endpoint, method = 'get', data = null) => {\n  console.log(`Making ${method.toUpperCase()} request to ${endpoint}`, data);\n  try {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      url,\n      method,\n      data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log('API request config:', config);\n    const response = await axios(config);\n    console.log(`Response from ${endpoint}:`, response.data);\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    console.error(`Error calling ${endpoint}:`, error);\n\n    // Detailed error logging\n    if (error.response) {\n      // The server responded with a status code outside the 2xx range\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      console.error('Response headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Request setup error:', error.message);\n    }\n    return {\n      success: false,\n      error\n    };\n  }\n};\n\n// Ping the server to check if it's available\nconst checkServerStatus = async () => {\n  try {\n    const result = await apiCall('/api/status');\n    return result.success;\n  } catch (error) {\n    console.error('Server status check failed:', error);\n    return false;\n  }\n};\nfunction App() {\n  _s();\n  const [gameData, setGameData] = useState(null);\n  const [detection, setDetection] = useState(null);\n  const [betSize, setBetSize] = useState(50);\n  const [bankroll, setBankroll] = useState(1000);\n  const [gameOver, setGameOver] = useState(false);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [serverError, setServerError] = useState(false);\n\n  // Check server connection on component mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      const isServerAvailable = await checkServerStatus();\n      if (!isServerAvailable) {\n        setServerError(true);\n        setMessage('Cannot connect to game server. Please ensure the backend is running.');\n      } else {\n        setServerError(false);\n        startNewGame();\n      }\n    };\n    checkConnection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Start a new game\n  const startNewGame = async () => {\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/new-game', 'post', {\n        bet_size: betSize\n      });\n      if (result.success) {\n        setGameData(result.data.game_data);\n        setDetection(result.data.detection);\n        setGameOver(false);\n        setMessage('');\n        setServerError(false);\n      } else {\n        setMessage('Error starting new game. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error starting new game:', error);\n      setMessage('Error starting new game. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player hits\n  const hit = async () => {\n    if (gameOver || loading) return;\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/hit', 'post', {\n        bet_size: betSize\n      });\n      if (result.success) {\n        setGameData(result.data.game_data);\n        if (result.data.game_data.game_status.game_over) {\n          handleGameOver(result.data.game_data.game_status, result.data.detection);\n        }\n      } else {\n        setMessage('Error hitting. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error hitting:', error);\n      setMessage('Error hitting. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player stands\n  const stand = async () => {\n    if (gameOver || loading) return;\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/stand', 'post', {\n        bet_size: betSize\n      });\n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error standing. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error standing:', error);\n      setMessage('Error standing. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player doubles down\n  const doubleDown = async () => {\n    if (gameOver || loading || bankroll < betSize * 2) return;\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/double-down', 'post', {\n        bet_size: betSize\n      });\n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error doubling down. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error doubling down:', error);\n      setMessage('Error doubling down. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset detector\n  const resetDetector = async () => {\n    try {\n      const result = await apiCall('/api/reset-detector', 'post');\n      if (result.success) {\n        setDetection(prev => ({\n          ...prev,\n          history: []\n        }));\n        setMessage('Card counting detector reset.');\n      } else {\n        setMessage('Error resetting detector. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error resetting detector:', error);\n      setMessage('Error resetting detector. Please try again.');\n    }\n  };\n\n  // Handle game over\n  const handleGameOver = (gameStatus, detectionData) => {\n    setGameOver(true);\n    setMessage(gameStatus.message);\n    setDetection(detectionData);\n\n    // Update bankroll based on game outcome\n    if (gameStatus.winner === 'player') {\n      if (gameStatus.message.includes('Blackjack')) {\n        // Blackjack pays 3:2\n        setBankroll(prevBankroll => prevBankroll + betSize * 1.5);\n      } else {\n        setBankroll(prevBankroll => prevBankroll + betSize);\n      }\n    } else if (gameStatus.winner === 'dealer') {\n      setBankroll(prevBankroll => prevBankroll - betSize);\n    }\n    // Push (tie) - no change to bankroll\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blackjack Card Counter Detector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bankroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Bankroll: $\", bankroll]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetDetector,\n          className: \"reset-button\",\n          children: \"Reset Detector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: serverError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Server Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Make sure the Flask backend is running on \", API_BASE_URL, \" and that you've installed all requirements:\", /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: \"pip install flask flask-cors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Retry Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-container\",\n          children: [gameData ? /*#__PURE__*/_jsxDEV(BlackjackTable, {\n            playerHand: gameData.player_hand,\n            dealerHand: gameData.dealer_hand,\n            gameOver: gameOver,\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: loading ? 'Loading game...' : 'Waiting for game data...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-controls\",\n            children: [/*#__PURE__*/_jsxDEV(BettingControls, {\n              betSize: betSize,\n              setBetSize: setBetSize,\n              bankroll: bankroll,\n              gameOver: gameOver,\n              runningCount: gameData ? gameData.running_count : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: hit,\n                disabled: gameOver || loading,\n                children: \"Hit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stand,\n                disabled: gameOver || loading,\n                children: \"Stand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: doubleDown,\n                disabled: gameOver || loading || bankroll < betSize * 2 || gameData && gameData.player_hand.length > 2,\n                children: \"Double Down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startNewGame,\n                className: \"new-game-button\",\n                children: \"New Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detection-container\",\n          children: /*#__PURE__*/_jsxDEV(CounterDetection, {\n            detection: detection,\n            runningCount: gameData ? gameData.running_count : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Created for CardCounterChecker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFhagNaUT1opMUHYdfQMfUd05cM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BlackjackTable","CounterDetection","BettingControls","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","apiCall","endpoint","method","data","console","log","toUpperCase","url","config","headers","response","success","error","status","request","message","checkServerStatus","result","App","_s","gameData","setGameData","detection","setDetection","betSize","setBetSize","bankroll","setBankroll","gameOver","setGameOver","setMessage","loading","setLoading","serverError","setServerError","checkConnection","isServerAvailable","startNewGame","bet_size","game_data","hit","game_status","game_over","handleGameOver","stand","doubleDown","resetDetector","prev","history","gameStatus","detectionData","winner","includes","prevBankroll","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","playerHand","player_hand","dealerHand","dealer_hand","runningCount","running_count","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jaykhemchandani/Desktop/CardCounterChecker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport BlackjackTable from './components/BlackjackTable';\nimport CounterDetection from './components/CounterDetection';\nimport BettingControls from './components/BettingControls';\n\n// Set the base URL for API calls (helpful for debugging)\n// Use this instead of relying on the proxy in package.json\nconst API_BASE_URL = 'http://127.0.0.1:5000';\n\n// Helper function to make API calls with proper error handling\nconst apiCall = async (endpoint, method = 'get', data = null) => {\n  console.log(`Making ${method.toUpperCase()} request to ${endpoint}`, data);\n  \n  try {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = { \n      url,\n      method, \n      data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    console.log('API request config:', config);\n    const response = await axios(config);\n    console.log(`Response from ${endpoint}:`, response.data);\n    return { success: true, data: response.data };\n  } catch (error) {\n    console.error(`Error calling ${endpoint}:`, error);\n    \n    // Detailed error logging\n    if (error.response) {\n      // The server responded with a status code outside the 2xx range\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      console.error('Response headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Request setup error:', error.message);\n    }\n    \n    return { success: false, error };\n  }\n};\n\n// Ping the server to check if it's available\nconst checkServerStatus = async () => {\n  try {\n    const result = await apiCall('/api/status');\n    return result.success;\n  } catch (error) {\n    console.error('Server status check failed:', error);\n    return false;\n  }\n};\n\nfunction App() {\n  const [gameData, setGameData] = useState(null);\n  const [detection, setDetection] = useState(null);\n  const [betSize, setBetSize] = useState(50);\n  const [bankroll, setBankroll] = useState(1000);\n  const [gameOver, setGameOver] = useState(false);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [serverError, setServerError] = useState(false);\n\n  // Check server connection on component mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      const isServerAvailable = await checkServerStatus();\n      if (!isServerAvailable) {\n        setServerError(true);\n        setMessage('Cannot connect to game server. Please ensure the backend is running.');\n      } else {\n        setServerError(false);\n        startNewGame();\n      }\n    };\n    \n    checkConnection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Start a new game\n  const startNewGame = async () => {\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/new-game', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        setDetection(result.data.detection);\n        setGameOver(false);\n        setMessage('');\n        setServerError(false);\n      } else {\n        setMessage('Error starting new game. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error starting new game:', error);\n      setMessage('Error starting new game. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player hits\n  const hit = async () => {\n    if (gameOver || loading) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/hit', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        \n        if (result.data.game_data.game_status.game_over) {\n          handleGameOver(result.data.game_data.game_status, result.data.detection);\n        }\n      } else {\n        setMessage('Error hitting. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error hitting:', error);\n      setMessage('Error hitting. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player stands\n  const stand = async () => {\n    if (gameOver || loading) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/stand', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error standing. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error standing:', error);\n      setMessage('Error standing. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player doubles down\n  const doubleDown = async () => {\n    if (gameOver || loading || bankroll < betSize * 2) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/double-down', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error doubling down. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error doubling down:', error);\n      setMessage('Error doubling down. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset detector\n  const resetDetector = async () => {\n    try {\n      const result = await apiCall('/api/reset-detector', 'post');\n      \n      if (result.success) {\n        setDetection(prev => ({...prev, history: []}));\n        setMessage('Card counting detector reset.');\n      } else {\n        setMessage('Error resetting detector. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error resetting detector:', error);\n      setMessage('Error resetting detector. Please try again.');\n    }\n  };\n\n  // Handle game over\n  const handleGameOver = (gameStatus, detectionData) => {\n    setGameOver(true);\n    setMessage(gameStatus.message);\n    setDetection(detectionData);\n    \n    // Update bankroll based on game outcome\n    if (gameStatus.winner === 'player') {\n      if (gameStatus.message.includes('Blackjack')) {\n        // Blackjack pays 3:2\n        setBankroll(prevBankroll => prevBankroll + betSize * 1.5);\n      } else {\n        setBankroll(prevBankroll => prevBankroll + betSize);\n      }\n    } else if (gameStatus.winner === 'dealer') {\n      setBankroll(prevBankroll => prevBankroll - betSize);\n    }\n    // Push (tie) - no change to bankroll\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Blackjack Card Counter Detector</h1>\n        <div className=\"bankroll\">\n          <span>Bankroll: ${bankroll}</span>\n          <button onClick={resetDetector} className=\"reset-button\">\n            Reset Detector\n          </button>\n        </div>\n      </header>\n\n      <main>\n        {serverError ? (\n          <div className=\"server-error\">\n            <h2>Server Connection Error</h2>\n            <p>{message}</p>\n            <p>\n              Make sure the Flask backend is running on {API_BASE_URL} and that you've installed all requirements:\n              <pre>pip install flask flask-cors</pre>\n            </p>\n            <button onClick={() => window.location.reload()}>Retry Connection</button>\n          </div>\n        ) : (\n          <>\n            <div className=\"game-container\">\n              {gameData ? (\n                <BlackjackTable \n                  playerHand={gameData.player_hand}\n                  dealerHand={gameData.dealer_hand}\n                  gameOver={gameOver}\n                  message={message}\n                />\n              ) : (\n                <div className=\"loading\">\n                  {loading ? 'Loading game...' : 'Waiting for game data...'}\n                </div>\n              )}\n\n              <div className=\"game-controls\">\n                <BettingControls \n                  betSize={betSize}\n                  setBetSize={setBetSize}\n                  bankroll={bankroll}\n                  gameOver={gameOver}\n                  runningCount={gameData ? gameData.running_count : 0}\n                />\n                \n                <div className=\"action-buttons\">\n                  <button onClick={hit} disabled={gameOver || loading}>Hit</button>\n                  <button onClick={stand} disabled={gameOver || loading}>Stand</button>\n                  <button \n                    onClick={doubleDown} \n                    disabled={gameOver || loading || bankroll < betSize * 2 || (gameData && gameData.player_hand.length > 2)}\n                  >\n                    Double Down\n                  </button>\n                  {gameOver && (\n                    <button onClick={startNewGame} className=\"new-game-button\">\n                      New Game\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"detection-container\">\n              <CounterDetection \n                detection={detection} \n                runningCount={gameData ? gameData.running_count : 0}\n              />\n            </div>\n          </>\n        )}\n      </main>\n\n      <footer>\n        <p>Created for CardCounterChecker</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;;AAE1D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC/DC,OAAO,CAACC,GAAG,CAAC,UAAUH,MAAM,CAACI,WAAW,CAAC,CAAC,eAAeL,QAAQ,EAAE,EAAEE,IAAI,CAAC;EAE1E,IAAI;IACF,MAAMI,GAAG,GAAG,GAAGR,YAAY,GAAGE,QAAQ,EAAE;IACxC,MAAMO,MAAM,GAAG;MACbD,GAAG;MACHL,MAAM;MACNC,IAAI;MACJM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAEDL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,MAAM,CAAC;IAC1C,MAAME,QAAQ,GAAG,MAAMnB,KAAK,CAACiB,MAAM,CAAC;IACpCJ,OAAO,CAACC,GAAG,CAAC,iBAAiBJ,QAAQ,GAAG,EAAES,QAAQ,CAACP,IAAI,CAAC;IACxD,OAAO;MAAEQ,OAAO,EAAE,IAAI;MAAER,IAAI,EAAEO,QAAQ,CAACP;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,iBAAiBX,QAAQ,GAAG,EAAEW,KAAK,CAAC;;IAElD;IACA,IAAIA,KAAK,CAACF,QAAQ,EAAE;MAClB;MACAN,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACF,QAAQ,CAACP,IAAI,CAAC;MACpDC,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACF,QAAQ,CAACG,MAAM,CAAC;MACxDT,OAAO,CAACQ,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACF,QAAQ,CAACD,OAAO,CAAC;IAC5D,CAAC,MAAM,IAAIG,KAAK,CAACE,OAAO,EAAE;MACxB;MACAV,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD,CAAC,MAAM;MACL;MACAV,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACG,OAAO,CAAC;IACtD;IAEA,OAAO;MAAEJ,OAAO,EAAE,KAAK;MAAEC;IAAM,CAAC;EAClC;AACF,CAAC;;AAED;AACA,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMjB,OAAO,CAAC,aAAa,CAAC;IAC3C,OAAOiB,MAAM,CAACN,OAAO;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,KAAK;EACd;AACF,CAAC;AAED,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0B,OAAO,EAAEe,UAAU,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM6C,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,iBAAiB,GAAG,MAAMpB,iBAAiB,CAAC,CAAC;MACnD,IAAI,CAACoB,iBAAiB,EAAE;QACtBF,cAAc,CAAC,IAAI,CAAC;QACpBJ,UAAU,CAAC,sEAAsE,CAAC;MACpF,CAAC,MAAM;QACLI,cAAc,CAAC,KAAK,CAAC;QACrBG,YAAY,CAAC,CAAC;MAChB;IACF,CAAC;IAEDF,eAAe,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMf,MAAM,GAAG,MAAMjB,OAAO,CAAC,eAAe,EAAE,MAAM,EAAE;QAAEsC,QAAQ,EAAEd;MAAQ,CAAC,CAAC;MAE5E,IAAIP,MAAM,CAACN,OAAO,EAAE;QAClBU,WAAW,CAACJ,MAAM,CAACd,IAAI,CAACoC,SAAS,CAAC;QAClChB,YAAY,CAACN,MAAM,CAACd,IAAI,CAACmB,SAAS,CAAC;QACnCO,WAAW,CAAC,KAAK,CAAC;QAClBC,UAAU,CAAC,EAAE,CAAC;QACdI,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC,MAAM;QACLJ,UAAU,CAAC,4CAA4C,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDkB,UAAU,CAAC,4CAA4C,CAAC;IAC1D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMQ,GAAG,GAAG,MAAAA,CAAA,KAAY;IACtB,IAAIZ,QAAQ,IAAIG,OAAO,EAAE;IAEzB,IAAI;MACFC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMf,MAAM,GAAG,MAAMjB,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE;QAAEsC,QAAQ,EAAEd;MAAQ,CAAC,CAAC;MAEvE,IAAIP,MAAM,CAACN,OAAO,EAAE;QAClBU,WAAW,CAACJ,MAAM,CAACd,IAAI,CAACoC,SAAS,CAAC;QAElC,IAAItB,MAAM,CAACd,IAAI,CAACoC,SAAS,CAACE,WAAW,CAACC,SAAS,EAAE;UAC/CC,cAAc,CAAC1B,MAAM,CAACd,IAAI,CAACoC,SAAS,CAACE,WAAW,EAAExB,MAAM,CAACd,IAAI,CAACmB,SAAS,CAAC;QAC1E;MACF,CAAC,MAAM;QACLQ,UAAU,CAAC,kCAAkC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCkB,UAAU,CAAC,kCAAkC,CAAC;IAChD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMY,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAIhB,QAAQ,IAAIG,OAAO,EAAE;IAEzB,IAAI;MACFC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMf,MAAM,GAAG,MAAMjB,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE;QAAEsC,QAAQ,EAAEd;MAAQ,CAAC,CAAC;MAEzE,IAAIP,MAAM,CAACN,OAAO,EAAE;QAClBU,WAAW,CAACJ,MAAM,CAACd,IAAI,CAACoC,SAAS,CAAC;QAClCI,cAAc,CAAC1B,MAAM,CAACd,IAAI,CAACoC,SAAS,CAACE,WAAW,EAAExB,MAAM,CAACd,IAAI,CAACmB,SAAS,CAAC;MAC1E,CAAC,MAAM;QACLQ,UAAU,CAAC,mCAAmC,CAAC;MACjD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCkB,UAAU,CAAC,mCAAmC,CAAC;IACjD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIjB,QAAQ,IAAIG,OAAO,IAAIL,QAAQ,GAAGF,OAAO,GAAG,CAAC,EAAE;IAEnD,IAAI;MACFQ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMf,MAAM,GAAG,MAAMjB,OAAO,CAAC,kBAAkB,EAAE,MAAM,EAAE;QAAEsC,QAAQ,EAAEd;MAAQ,CAAC,CAAC;MAE/E,IAAIP,MAAM,CAACN,OAAO,EAAE;QAClBU,WAAW,CAACJ,MAAM,CAACd,IAAI,CAACoC,SAAS,CAAC;QAClCI,cAAc,CAAC1B,MAAM,CAACd,IAAI,CAACoC,SAAS,CAACE,WAAW,EAAExB,MAAM,CAACd,IAAI,CAACmB,SAAS,CAAC;MAC1E,CAAC,MAAM;QACLQ,UAAU,CAAC,wCAAwC,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CkB,UAAU,CAAC,wCAAwC,CAAC;IACtD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM7B,MAAM,GAAG,MAAMjB,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;MAE3D,IAAIiB,MAAM,CAACN,OAAO,EAAE;QAClBY,YAAY,CAACwB,IAAI,KAAK;UAAC,GAAGA,IAAI;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC,CAAC;QAC9ClB,UAAU,CAAC,+BAA+B,CAAC;MAC7C,CAAC,MAAM;QACLA,UAAU,CAAC,6CAA6C,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDkB,UAAU,CAAC,6CAA6C,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMa,cAAc,GAAGA,CAACM,UAAU,EAAEC,aAAa,KAAK;IACpDrB,WAAW,CAAC,IAAI,CAAC;IACjBC,UAAU,CAACmB,UAAU,CAAClC,OAAO,CAAC;IAC9BQ,YAAY,CAAC2B,aAAa,CAAC;;IAE3B;IACA,IAAID,UAAU,CAACE,MAAM,KAAK,QAAQ,EAAE;MAClC,IAAIF,UAAU,CAAClC,OAAO,CAACqC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC5C;QACAzB,WAAW,CAAC0B,YAAY,IAAIA,YAAY,GAAG7B,OAAO,GAAG,GAAG,CAAC;MAC3D,CAAC,MAAM;QACLG,WAAW,CAAC0B,YAAY,IAAIA,YAAY,GAAG7B,OAAO,CAAC;MACrD;IACF,CAAC,MAAM,IAAIyB,UAAU,CAACE,MAAM,KAAK,QAAQ,EAAE;MACzCxB,WAAW,CAAC0B,YAAY,IAAIA,YAAY,GAAG7B,OAAO,CAAC;IACrD;IACA;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK0D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3D,OAAA;MAAA2D,QAAA,gBACE3D,OAAA;QAAA2D,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC/D,OAAA;QAAK0D,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB3D,OAAA;UAAA2D,QAAA,GAAM,aAAW,EAAC7B,QAAQ;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClC/D,OAAA;UAAQgE,OAAO,EAAEd,aAAc;UAACQ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAEzD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET/D,OAAA;MAAA2D,QAAA,EACGtB,WAAW,gBACVrC,OAAA;QAAK0D,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B3D,OAAA;UAAA2D,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC/D,OAAA;UAAA2D,QAAA,EAAIxC;QAAO;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChB/D,OAAA;UAAA2D,QAAA,GAAG,4CACyC,EAACxD,YAAY,EAAC,8CACxD,eAAAH,OAAA;YAAA2D,QAAA,EAAK;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACJ/D,OAAA;UAAQgE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;UAAAR,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,gBAEN/D,OAAA,CAAAE,SAAA;QAAAyD,QAAA,gBACE3D,OAAA;UAAK0D,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5BnC,QAAQ,gBACPxB,OAAA,CAACJ,cAAc;YACbwE,UAAU,EAAE5C,QAAQ,CAAC6C,WAAY;YACjCC,UAAU,EAAE9C,QAAQ,CAAC+C,WAAY;YACjCvC,QAAQ,EAAEA,QAAS;YACnBb,OAAO,EAAEA;UAAQ;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,gBAEF/D,OAAA;YAAK0D,SAAS,EAAC,SAAS;YAAAC,QAAA,EACrBxB,OAAO,GAAG,iBAAiB,GAAG;UAA0B;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACN,eAED/D,OAAA;YAAK0D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B3D,OAAA,CAACF,eAAe;cACd8B,OAAO,EAAEA,OAAQ;cACjBC,UAAU,EAAEA,UAAW;cACvBC,QAAQ,EAAEA,QAAS;cACnBE,QAAQ,EAAEA,QAAS;cACnBwC,YAAY,EAAEhD,QAAQ,GAAGA,QAAQ,CAACiD,aAAa,GAAG;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eAEF/D,OAAA;cAAK0D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B3D,OAAA;gBAAQgE,OAAO,EAAEpB,GAAI;gBAAC8B,QAAQ,EAAE1C,QAAQ,IAAIG,OAAQ;gBAAAwB,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACjE/D,OAAA;gBAAQgE,OAAO,EAAEhB,KAAM;gBAAC0B,QAAQ,EAAE1C,QAAQ,IAAIG,OAAQ;gBAAAwB,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrE/D,OAAA;gBACEgE,OAAO,EAAEf,UAAW;gBACpByB,QAAQ,EAAE1C,QAAQ,IAAIG,OAAO,IAAIL,QAAQ,GAAGF,OAAO,GAAG,CAAC,IAAKJ,QAAQ,IAAIA,QAAQ,CAAC6C,WAAW,CAACM,MAAM,GAAG,CAAG;gBAAAhB,QAAA,EAC1G;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACR/B,QAAQ,iBACPhC,OAAA;gBAAQgE,OAAO,EAAEvB,YAAa;gBAACiB,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAE3D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN/D,OAAA;UAAK0D,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClC3D,OAAA,CAACH,gBAAgB;YACf6B,SAAS,EAAEA,SAAU;YACrB8C,YAAY,EAAEhD,QAAQ,GAAGA,QAAQ,CAACiD,aAAa,GAAG;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEP/D,OAAA;MAAA2D,QAAA,eACE3D,OAAA;QAAA2D,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxC,EAAA,CA7OQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AA+OZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}