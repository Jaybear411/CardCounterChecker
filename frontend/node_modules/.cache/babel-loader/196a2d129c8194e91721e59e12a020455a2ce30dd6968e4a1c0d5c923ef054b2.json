{"ast":null,"code":"var _jsxFileName = \"/Users/jaykhemchandani/Desktop/CardCounterChecker/frontend/src/components/BlackjackTable.js\";\nimport React from 'react';\nimport './BlackjackTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlackjackTable = ({\n  playerHand,\n  dealerHand,\n  gameOver,\n  message\n}) => {\n  // Function to render a playing card\n  const renderCard = card => {\n    const {\n      value,\n      suit\n    } = card;\n\n    // Determine card color based on suit\n    const cardColor = suit === '♥' || suit === '♦' ? 'red' : 'black';\n\n    // For face-down card\n    if (value === '?') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card face-down new-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${cardColor} new-card`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-value-top\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-suit\",\n        children: suit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-value-bottom\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Calculate hand value\n  const calculateHandValue = hand => {\n    if (!hand) return 0;\n    let value = 0;\n    let aces = 0;\n    hand.forEach(card => {\n      if (card.value === '?') return;\n      if (['J', 'Q', 'K'].includes(card.value)) {\n        value += 10;\n      } else if (card.value === 'A') {\n        value += 11;\n        aces += 1;\n      } else {\n        value += parseInt(card.value);\n      }\n    });\n\n    // Adjust for aces if needed\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    return value;\n  };\n  const playerValue = calculateHandValue(playerHand);\n  const dealerValue = calculateHandValue(dealerHand);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blackjack-table\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-felt\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dealer-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Dealer \", gameOver && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"(\", dealerValue, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand dealer-hand\",\n          children: dealerHand && dealerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: renderCard(card)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Player (\", playerValue, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand player-hand\",\n          children: playerHand && playerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: renderCard(card)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = BlackjackTable;\nexport default BlackjackTable;\nvar _c;\n$RefreshReg$(_c, \"BlackjackTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BlackjackTable","playerHand","dealerHand","gameOver","message","renderCard","card","value","suit","cardColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateHandValue","hand","aces","forEach","includes","parseInt","playerValue","dealerValue","map","index","_c","$RefreshReg$"],"sources":["/Users/jaykhemchandani/Desktop/CardCounterChecker/frontend/src/components/BlackjackTable.js"],"sourcesContent":["import React from 'react';\nimport './BlackjackTable.css';\n\nconst BlackjackTable = ({ playerHand, dealerHand, gameOver, message }) => {\n  // Function to render a playing card\n  const renderCard = (card) => {\n    const { value, suit } = card;\n    \n    // Determine card color based on suit\n    const cardColor = suit === '♥' || suit === '♦' ? 'red' : 'black';\n    \n    // For face-down card\n    if (value === '?') {\n      return (\n        <div className=\"card face-down new-card\">\n          <div className=\"card-back\"></div>\n        </div>\n      );\n    }\n    \n    return (\n      <div className={`card ${cardColor} new-card`}>\n        <div className=\"card-value-top\">{value}</div>\n        <div className=\"card-suit\">{suit}</div>\n        <div className=\"card-value-bottom\">{value}</div>\n      </div>\n    );\n  };\n\n  // Calculate hand value\n  const calculateHandValue = (hand) => {\n    if (!hand) return 0;\n    \n    let value = 0;\n    let aces = 0;\n    \n    hand.forEach(card => {\n      if (card.value === '?') return;\n      \n      if (['J', 'Q', 'K'].includes(card.value)) {\n        value += 10;\n      } else if (card.value === 'A') {\n        value += 11;\n        aces += 1;\n      } else {\n        value += parseInt(card.value);\n      }\n    });\n    \n    // Adjust for aces if needed\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    \n    return value;\n  };\n\n  const playerValue = calculateHandValue(playerHand);\n  const dealerValue = calculateHandValue(dealerHand);\n  \n  return (\n    <div className=\"blackjack-table\">\n      <div className=\"table-felt\">\n        <div className=\"dealer-area\">\n          <h2>Dealer {gameOver && <span>({dealerValue})</span>}</h2>\n          <div className=\"hand dealer-hand\">\n            {dealerHand && dealerHand.map((card, index) => (\n              <div key={index} className=\"card-container\">\n                {renderCard(card)}\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"player-area\">\n          <h2>Player ({playerValue})</h2>\n          <div className=\"hand player-hand\">\n            {playerHand && playerHand.map((card, index) => (\n              <div key={index} className=\"card-container\">\n                {renderCard(card)}\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {message && (\n          <div className=\"game-message\">\n            <p>{message}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BlackjackTable; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACxE;EACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,IAAI;;IAE5B;IACA,MAAMG,SAAS,GAAGD,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,OAAO;;IAEhE;IACA,IAAID,KAAK,KAAK,GAAG,EAAE;MACjB,oBACER,OAAA;QAAKW,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCZ,OAAA;UAAKW,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAEV;IAEA,oBACEhB,OAAA;MAAKW,SAAS,EAAE,QAAQD,SAAS,WAAY;MAAAE,QAAA,gBAC3CZ,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7ChB,OAAA;QAAKW,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEH;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvChB,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEV,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;IACnC,IAAI,CAACA,IAAI,EAAE,OAAO,CAAC;IAEnB,IAAIV,KAAK,GAAG,CAAC;IACb,IAAIW,IAAI,GAAG,CAAC;IAEZD,IAAI,CAACE,OAAO,CAACb,IAAI,IAAI;MACnB,IAAIA,IAAI,CAACC,KAAK,KAAK,GAAG,EAAE;MAExB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACa,QAAQ,CAACd,IAAI,CAACC,KAAK,CAAC,EAAE;QACxCA,KAAK,IAAI,EAAE;MACb,CAAC,MAAM,IAAID,IAAI,CAACC,KAAK,KAAK,GAAG,EAAE;QAC7BA,KAAK,IAAI,EAAE;QACXW,IAAI,IAAI,CAAC;MACX,CAAC,MAAM;QACLX,KAAK,IAAIc,QAAQ,CAACf,IAAI,CAACC,KAAK,CAAC;MAC/B;IACF,CAAC,CAAC;;IAEF;IACA,OAAOA,KAAK,GAAG,EAAE,IAAIW,IAAI,GAAG,CAAC,EAAE;MAC7BX,KAAK,IAAI,EAAE;MACXW,IAAI,IAAI,CAAC;IACX;IAEA,OAAOX,KAAK;EACd,CAAC;EAED,MAAMe,WAAW,GAAGN,kBAAkB,CAACf,UAAU,CAAC;EAClD,MAAMsB,WAAW,GAAGP,kBAAkB,CAACd,UAAU,CAAC;EAElD,oBACEH,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BZ,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBZ,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BZ,OAAA;UAAAY,QAAA,GAAI,SAAO,EAACR,QAAQ,iBAAIJ,OAAA;YAAAY,QAAA,GAAM,GAAC,EAACY,WAAW,EAAC,GAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1DhB,OAAA;UAAKW,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BT,UAAU,IAAIA,UAAU,CAACsB,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACxC1B,OAAA;YAAiBW,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EACxCN,UAAU,CAACC,IAAI;UAAC,GADTmB,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENhB,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BZ,OAAA;UAAAY,QAAA,GAAI,UAAQ,EAACW,WAAW,EAAC,GAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BhB,OAAA;UAAKW,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BV,UAAU,IAAIA,UAAU,CAACuB,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACxC1B,OAAA;YAAiBW,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EACxCN,UAAU,CAACC,IAAI;UAAC,GADTmB,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELX,OAAO,iBACNL,OAAA;QAAKW,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BZ,OAAA;UAAAY,QAAA,EAAIP;QAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GA3FI1B,cAAc;AA6FpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}