{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';import BlackjackTable from'./components/BlackjackTable';import CounterDetection from'./components/CounterDetection';import BettingControls from'./components/BettingControls';// Set the base URL for API calls (helpful for debugging)\n// Use this instead of relying on the proxy in package.json\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL='http://127.0.0.1:5000';// Helper function to make API calls with proper error handling\nconst apiCall=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'get';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;console.log(`Making ${method.toUpperCase()} request to ${endpoint}`,data);try{const url=`${API_BASE_URL}${endpoint}`;const config={url,method,data,headers:{'Content-Type':'application/json'}};console.log('API request config:',config);const response=await axios(config);console.log(`Response from ${endpoint}:`,response.data);return{success:true,data:response.data};}catch(error){console.error(`Error calling ${endpoint}:`,error);// Detailed error logging\nif(error.response){// The server responded with a status code outside the 2xx range\nconsole.error('Response data:',error.response.data);console.error('Response status:',error.response.status);console.error('Response headers:',error.response.headers);}else if(error.request){// The request was made but no response was received\nconsole.error('No response received:',error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.error('Request setup error:',error.message);}return{success:false,error};}};// Ping the server to check if it's available\nconst checkServerStatus=async()=>{try{const result=await apiCall('/api/status');return result.success;}catch(error){console.error('Server status check failed:',error);return false;}};function App(){const[gameData,setGameData]=useState(null);const[detection,setDetection]=useState(null);const[betSize,setBetSize]=useState(50);const[bankroll,setBankroll]=useState(1000);const[gameOver,setGameOver]=useState(false);const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const[serverError,setServerError]=useState(false);// Check server connection on component mount\nuseEffect(()=>{const checkConnection=async()=>{const isServerAvailable=await checkServerStatus();if(!isServerAvailable){setServerError(true);setMessage('Cannot connect to game server. Please ensure the backend is running.');}else{setServerError(false);startNewGame();}};checkConnection();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Start a new game\nconst startNewGame=async()=>{try{setLoading(true);const result=await apiCall('/api/new-game','post',{bet_size:betSize});if(result.success){setGameData(result.data.game_data);setDetection(result.data.detection);setGameOver(false);setMessage('');setServerError(false);}else{setMessage('Error starting new game. Please try again.');}}catch(error){console.error('Error starting new game:',error);setMessage('Error starting new game. Please try again.');}finally{setLoading(false);}};// Player hits\nconst hit=async()=>{if(gameOver||loading)return;try{setLoading(true);const result=await apiCall('/api/hit','post',{bet_size:betSize});if(result.success){setGameData(result.data.game_data);if(result.data.game_data.game_status.game_over){handleGameOver(result.data.game_data.game_status,result.data.detection);}}else{setMessage('Error hitting. Please try again.');}}catch(error){console.error('Error hitting:',error);setMessage('Error hitting. Please try again.');}finally{setLoading(false);}};// Player stands\nconst stand=async()=>{if(gameOver||loading)return;try{setLoading(true);const result=await apiCall('/api/stand','post',{bet_size:betSize});if(result.success){setGameData(result.data.game_data);handleGameOver(result.data.game_data.game_status,result.data.detection);}else{setMessage('Error standing. Please try again.');}}catch(error){console.error('Error standing:',error);setMessage('Error standing. Please try again.');}finally{setLoading(false);}};// Player doubles down\nconst doubleDown=async()=>{if(gameOver||loading||bankroll<betSize*2)return;try{setLoading(true);const result=await apiCall('/api/double-down','post',{bet_size:betSize});if(result.success){setGameData(result.data.game_data);handleGameOver(result.data.game_data.game_status,result.data.detection);}else{setMessage('Error doubling down. Please try again.');}}catch(error){console.error('Error doubling down:',error);setMessage('Error doubling down. Please try again.');}finally{setLoading(false);}};// Reset detector\nconst resetDetector=async()=>{try{const result=await apiCall('/api/reset-detector','post');if(result.success){setDetection(prev=>({...prev,history:[]}));setMessage('Card counting detector reset.');}else{setMessage('Error resetting detector. Please try again.');}}catch(error){console.error('Error resetting detector:',error);setMessage('Error resetting detector. Please try again.');}};// Handle game over\nconst handleGameOver=(gameStatus,detectionData)=>{setGameOver(true);setMessage(gameStatus.message);setDetection(detectionData);// Update bankroll based on game outcome\nif(gameStatus.winner==='player'){if(gameStatus.message.includes('Blackjack')){// Blackjack pays 3:2\nsetBankroll(prevBankroll=>prevBankroll+betSize*1.5);}else{setBankroll(prevBankroll=>prevBankroll+betSize);}}else if(gameStatus.winner==='dealer'){setBankroll(prevBankroll=>prevBankroll-betSize);}// Push (tie) - no change to bankroll\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Blackjack Card Counter Detector\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bankroll\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Bankroll: $\",bankroll]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetDetector,className:\"reset-button\",children:\"Reset Detector\"})]})]}),/*#__PURE__*/_jsx(\"main\",{children:serverError?/*#__PURE__*/_jsxs(\"div\",{className:\"server-error\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Server Connection Error\"}),/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Make sure the Flask backend is running on \",API_BASE_URL,\" and that you've installed all requirements:\",/*#__PURE__*/_jsx(\"pre\",{children:\"pip install flask flask-cors\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Retry Connection\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[gameData?/*#__PURE__*/_jsx(BlackjackTable,{playerHand:gameData.player_hand,dealerHand:gameData.dealer_hand,gameOver:gameOver,message:message}):/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:loading?'Loading game...':'Waiting for game data...'}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(BettingControls,{betSize:betSize,setBetSize:setBetSize,bankroll:bankroll,gameOver:gameOver}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:hit,disabled:gameOver||loading,children:\"Hit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stand,disabled:gameOver||loading,children:\"Stand\"}),/*#__PURE__*/_jsx(\"button\",{onClick:doubleDown,disabled:gameOver||loading||bankroll<betSize*2||gameData&&gameData.player_hand.length>2,children:\"Double Down\"}),gameOver&&/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,className:\"new-game-button\",children:\"New Game\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"detection-container\",children:/*#__PURE__*/_jsx(CounterDetection,{detection:detection,runningCount:gameData?gameData.running_count:0})})]})}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Created for CardCounterChecker\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","BlackjackTable","CounterDetection","BettingControls","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","apiCall","endpoint","method","arguments","length","undefined","data","console","log","toUpperCase","url","config","headers","response","success","error","status","request","message","checkServerStatus","result","App","gameData","setGameData","detection","setDetection","betSize","setBetSize","bankroll","setBankroll","gameOver","setGameOver","setMessage","loading","setLoading","serverError","setServerError","checkConnection","isServerAvailable","startNewGame","bet_size","game_data","hit","game_status","game_over","handleGameOver","stand","doubleDown","resetDetector","prev","history","gameStatus","detectionData","winner","includes","prevBankroll","className","children","onClick","window","location","reload","playerHand","player_hand","dealerHand","dealer_hand","disabled","runningCount","running_count"],"sources":["/Users/jaykhemchandani/Desktop/CardCounterChecker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport BlackjackTable from './components/BlackjackTable';\nimport CounterDetection from './components/CounterDetection';\nimport BettingControls from './components/BettingControls';\n\n// Set the base URL for API calls (helpful for debugging)\n// Use this instead of relying on the proxy in package.json\nconst API_BASE_URL = 'http://127.0.0.1:5000';\n\n// Helper function to make API calls with proper error handling\nconst apiCall = async (endpoint, method = 'get', data = null) => {\n  console.log(`Making ${method.toUpperCase()} request to ${endpoint}`, data);\n  \n  try {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = { \n      url,\n      method, \n      data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    console.log('API request config:', config);\n    const response = await axios(config);\n    console.log(`Response from ${endpoint}:`, response.data);\n    return { success: true, data: response.data };\n  } catch (error) {\n    console.error(`Error calling ${endpoint}:`, error);\n    \n    // Detailed error logging\n    if (error.response) {\n      // The server responded with a status code outside the 2xx range\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      console.error('Response headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Request setup error:', error.message);\n    }\n    \n    return { success: false, error };\n  }\n};\n\n// Ping the server to check if it's available\nconst checkServerStatus = async () => {\n  try {\n    const result = await apiCall('/api/status');\n    return result.success;\n  } catch (error) {\n    console.error('Server status check failed:', error);\n    return false;\n  }\n};\n\nfunction App() {\n  const [gameData, setGameData] = useState(null);\n  const [detection, setDetection] = useState(null);\n  const [betSize, setBetSize] = useState(50);\n  const [bankroll, setBankroll] = useState(1000);\n  const [gameOver, setGameOver] = useState(false);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [serverError, setServerError] = useState(false);\n\n  // Check server connection on component mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      const isServerAvailable = await checkServerStatus();\n      if (!isServerAvailable) {\n        setServerError(true);\n        setMessage('Cannot connect to game server. Please ensure the backend is running.');\n      } else {\n        setServerError(false);\n        startNewGame();\n      }\n    };\n    \n    checkConnection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Start a new game\n  const startNewGame = async () => {\n    try {\n      setLoading(true);\n      const result = await apiCall('/api/new-game', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        setDetection(result.data.detection);\n        setGameOver(false);\n        setMessage('');\n        setServerError(false);\n      } else {\n        setMessage('Error starting new game. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error starting new game:', error);\n      setMessage('Error starting new game. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player hits\n  const hit = async () => {\n    if (gameOver || loading) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/hit', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        \n        if (result.data.game_data.game_status.game_over) {\n          handleGameOver(result.data.game_data.game_status, result.data.detection);\n        }\n      } else {\n        setMessage('Error hitting. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error hitting:', error);\n      setMessage('Error hitting. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player stands\n  const stand = async () => {\n    if (gameOver || loading) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/stand', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error standing. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error standing:', error);\n      setMessage('Error standing. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Player doubles down\n  const doubleDown = async () => {\n    if (gameOver || loading || bankroll < betSize * 2) return;\n    \n    try {\n      setLoading(true);\n      const result = await apiCall('/api/double-down', 'post', { bet_size: betSize });\n      \n      if (result.success) {\n        setGameData(result.data.game_data);\n        handleGameOver(result.data.game_data.game_status, result.data.detection);\n      } else {\n        setMessage('Error doubling down. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error doubling down:', error);\n      setMessage('Error doubling down. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset detector\n  const resetDetector = async () => {\n    try {\n      const result = await apiCall('/api/reset-detector', 'post');\n      \n      if (result.success) {\n        setDetection(prev => ({...prev, history: []}));\n        setMessage('Card counting detector reset.');\n      } else {\n        setMessage('Error resetting detector. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error resetting detector:', error);\n      setMessage('Error resetting detector. Please try again.');\n    }\n  };\n\n  // Handle game over\n  const handleGameOver = (gameStatus, detectionData) => {\n    setGameOver(true);\n    setMessage(gameStatus.message);\n    setDetection(detectionData);\n    \n    // Update bankroll based on game outcome\n    if (gameStatus.winner === 'player') {\n      if (gameStatus.message.includes('Blackjack')) {\n        // Blackjack pays 3:2\n        setBankroll(prevBankroll => prevBankroll + betSize * 1.5);\n      } else {\n        setBankroll(prevBankroll => prevBankroll + betSize);\n      }\n    } else if (gameStatus.winner === 'dealer') {\n      setBankroll(prevBankroll => prevBankroll - betSize);\n    }\n    // Push (tie) - no change to bankroll\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Blackjack Card Counter Detector</h1>\n        <div className=\"bankroll\">\n          <span>Bankroll: ${bankroll}</span>\n          <button onClick={resetDetector} className=\"reset-button\">\n            Reset Detector\n          </button>\n        </div>\n      </header>\n\n      <main>\n        {serverError ? (\n          <div className=\"server-error\">\n            <h2>Server Connection Error</h2>\n            <p>{message}</p>\n            <p>\n              Make sure the Flask backend is running on {API_BASE_URL} and that you've installed all requirements:\n              <pre>pip install flask flask-cors</pre>\n            </p>\n            <button onClick={() => window.location.reload()}>Retry Connection</button>\n          </div>\n        ) : (\n          <>\n            <div className=\"game-container\">\n              {gameData ? (\n                <BlackjackTable \n                  playerHand={gameData.player_hand}\n                  dealerHand={gameData.dealer_hand}\n                  gameOver={gameOver}\n                  message={message}\n                />\n              ) : (\n                <div className=\"loading\">\n                  {loading ? 'Loading game...' : 'Waiting for game data...'}\n                </div>\n              )}\n\n              <div className=\"game-controls\">\n                <BettingControls \n                  betSize={betSize}\n                  setBetSize={setBetSize}\n                  bankroll={bankroll}\n                  gameOver={gameOver}\n                />\n                \n                <div className=\"action-buttons\">\n                  <button onClick={hit} disabled={gameOver || loading}>Hit</button>\n                  <button onClick={stand} disabled={gameOver || loading}>Stand</button>\n                  <button \n                    onClick={doubleDown} \n                    disabled={gameOver || loading || bankroll < betSize * 2 || (gameData && gameData.player_hand.length > 2)}\n                  >\n                    Double Down\n                  </button>\n                  {gameOver && (\n                    <button onClick={startNewGame} className=\"new-game-button\">\n                      New Game\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"detection-container\">\n              <CounterDetection \n                detection={detection} \n                runningCount={gameData ? gameData.running_count : 0}\n              />\n            </div>\n          </>\n        )}\n      </main>\n\n      <footer>\n        <p>Created for CardCounterChecker</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}